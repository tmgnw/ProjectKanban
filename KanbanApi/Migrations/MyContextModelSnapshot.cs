// <auto-generated />
using System;
using KanbanApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KanbanApi.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KanbanApi.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Team_Id");

                    b.HasKey("Id");

                    b.HasIndex("Team_Id");

                    b.ToTable("TB_M_Board");
                });

            modelBuilder.Entity("KanbanApi.Models.BoardCard", b =>
                {
                    b.Property<int>("Board_Id");

                    b.Property<int>("Card_Id");

                    b.HasKey("Board_Id", "Card_Id");

                    b.HasIndex("Card_Id");

                    b.ToTable("TB_T_Board_Card");
                });

            modelBuilder.Entity("KanbanApi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<DateTimeOffset>("StartDate");

                    b.Property<int>("StatusList_Id");

                    b.HasKey("Id");

                    b.HasIndex("StatusList_Id");

                    b.ToTable("TB_T_Card");
                });

            modelBuilder.Entity("KanbanApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Role");
                });

            modelBuilder.Entity("KanbanApi.Models.StatusList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TB_T_Status_List");
                });

            modelBuilder.Entity("KanbanApi.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TB_M_Team");
                });

            modelBuilder.Entity("KanbanApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("TB_M_User");
                });

            modelBuilder.Entity("KanbanApi.Models.UserRole", b =>
                {
                    b.Property<int>("User_Id");

                    b.Property<int>("Role_Id");

                    b.HasKey("User_Id", "Role_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("TB_T_User_Role");
                });

            modelBuilder.Entity("KanbanApi.Models.UserTeam", b =>
                {
                    b.Property<int>("User_Id");

                    b.Property<int>("Team_Id");

                    b.HasKey("User_Id", "Team_Id");

                    b.HasIndex("Team_Id");

                    b.ToTable("TB_T_User_Team");
                });

            modelBuilder.Entity("KanbanApi.Models.Board", b =>
                {
                    b.HasOne("KanbanApi.Models.Team", "Team")
                        .WithMany("Boards")
                        .HasForeignKey("Team_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.BoardCard", b =>
                {
                    b.HasOne("KanbanApi.Models.Board", "Board")
                        .WithMany("BoardCards")
                        .HasForeignKey("Board_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KanbanApi.Models.Card", "Card")
                        .WithMany("BoardCards")
                        .HasForeignKey("Card_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.Card", b =>
                {
                    b.HasOne("KanbanApi.Models.StatusList", "StatusList")
                        .WithMany("Cards")
                        .HasForeignKey("StatusList_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.UserRole", b =>
                {
                    b.HasOne("KanbanApi.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KanbanApi.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.UserTeam", b =>
                {
                    b.HasOne("KanbanApi.Models.Team", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("Team_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KanbanApi.Models.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
