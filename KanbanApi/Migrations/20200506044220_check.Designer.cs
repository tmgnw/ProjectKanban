// <auto-generated />
using System;
using KanbanApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KanbanApi.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200506044220_check")]
    partial class check
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KanbanApi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.Property<int>("TaskList_Id");

                    b.HasKey("Id");

                    b.HasIndex("TaskList_Id");

                    b.ToTable("TB_T_Card");
                });

            modelBuilder.Entity("KanbanApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsActive");

                    b.Property<bool>("IsArchived");

                    b.Property<int>("Manager_Id");

                    b.Property<string>("Name");

                    b.Property<int>("TotalTasks");

                    b.HasKey("Id");

                    b.HasIndex("Manager_Id");

                    b.ToTable("TB_M_Project");
                });

            modelBuilder.Entity("KanbanApi.Models.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<int>("Project_Id");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("TB_T_Task_List");
                });

            modelBuilder.Entity("KanbanApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("TB_M_User");
                });

            modelBuilder.Entity("KanbanApi.Models.Card", b =>
                {
                    b.HasOne("KanbanApi.Models.TaskList", "TaskList")
                        .WithMany("Cards")
                        .HasForeignKey("TaskList_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.Project", b =>
                {
                    b.HasOne("KanbanApi.Models.User", "Manager")
                        .WithMany("Projects")
                        .HasForeignKey("Manager_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanApi.Models.TaskList", b =>
                {
                    b.HasOne("KanbanApi.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
